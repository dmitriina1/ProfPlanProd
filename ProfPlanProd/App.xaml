<Application x:Class="ProfPlanProd.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ProfPlanProd"
             xmlns:views="clr-namespace:ProfPlanProd.Views"
             StartupUri="Views/MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Resources/Styles/Windows.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesign3.Defaults.xaml" >
                    <!--RadioButton-->
                    <Style x:Key="FocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <Style x:Key="OptionMarkFocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <SolidColorBrush x:Key="RadioButton.Static.Background" Color="Transparent"/>
                    <SolidColorBrush x:Key="RadioButton.Static.Border" Color="Transparent"/>
                    <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="Transparent"/>
                    <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="Transparent"/>
                    <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="Transparent"/>
                    <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="Transparent"/>
                    <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="Transparent"/>
                    <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="Transparent"/>
                    <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="Transparent"/>
                    <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="Transparent"/>
                    <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="Transparent"/>
                    <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="Transparent"/>
                    <Style x:Key="MaterialDesignSwitchSecondaryToggleButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MaterialDesignSwitchToggleButton}"/>
                    <Style x:Key="MaterialDesignSwitchLightToggleButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MaterialDesignSwitchToggleButton}"/>
                    <Style x:Key="MaterialDesignSwitchDarkToggleButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource MaterialDesignSwitchToggleButton}"/>
                    <Style x:Key="MaterialDesignSwitchToggleButton" TargetType="{x:Type ToggleButton}">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                        <Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="radioButtonBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <Grid x:Name="markGrid" Margin="2">
                                                <Ellipse x:Name="optionMark" Fill="{StaticResource RadioButton.Pressed.Background}" MinWidth="6" MinHeight="6" Opacity="0"/>
                                            </Grid>
                                        </Border>
                                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasContent" Value="true">
                                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                            <Setter Property="Padding" Value="4,-1,0,0"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
                                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Background}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>
                                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Background}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
                                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Background}"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="{x:Null}">
                                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <!--CheckBox-->
                   
                    <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
                    <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
                    <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
                    <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
                    <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="Transparent"/>
                    <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
                    <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
                    <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="Transparent"/>
                    <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
                    <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
                    <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
                    <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
                    <Style x:Key="MaterialDesignSecondaryCheckBox" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource MaterialDesignCheckBox}"/>
                    <Style x:Key="MaterialDesignDarkCheckBox" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource MaterialDesignCheckBox}"/>
                    <Style x:Key="MaterialDesignLightCheckBox" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource MaterialDesignCheckBox}"/>
                    <Style x:Key="MaterialDesignCheckBox" TargetType="{x:Type CheckBox}">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                        <Setter Property="Background" Value="{StaticResource OptionMark.Static.Background}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource OptionMark.Static.Border}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type CheckBox}">
                                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="checkBoxBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <Grid x:Name="markGrid">
                                                <Path x:Name="optionMark" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Fill="{StaticResource OptionMark.Static.Glyph}" Margin="1" Opacity="0" Stretch="None"/>
                                                <Rectangle x:Name="indeterminateMark" Fill="{StaticResource OptionMark.Static.Glyph}" Margin="2" Opacity="0"/>
                                            </Grid>
                                        </Border>
                                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="HasContent" Value="true">
                                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                                            <Setter Property="Padding" Value="4,-1,0,0"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.MouseOver.Border}"/>
                                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.MouseOver.Glyph}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Disabled.Border}"/>
                                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Disabled.Glyph}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter Property="Background" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="{StaticResource OptionMark.Pressed.Border}"/>
                                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                            <Setter Property="Fill" TargetName="indeterminateMark" Value="{StaticResource OptionMark.Pressed.Glyph}"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="true">
                                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="{x:Null}">
                                            <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                            <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ResourceDictionary>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />

                <!--<ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Dark.xaml" />-->
            </ResourceDictionary.MergedDictionaries>
            <views:MyContentTemplateSelector x:Key="MyContentTemplateSelector"
                FirstTemplate="{StaticResource FirstTemplate}" 
                SecondTemplate="{StaticResource SecondTemplate}"/>
            <views:TabStripPlacementConverter x:Key="TabStripPlacementConverter"
            TopTemplate="{StaticResource TopTemplate}" 
                    BottomTemplate="{StaticResource BottomTemplate}" 
            LeftTemplate="{StaticResource LeftTemplate}" 
                 RightTemplate ="{StaticResource RightTemplate}"/>

           

        </ResourceDictionary>
    </Application.Resources>
</Application>
